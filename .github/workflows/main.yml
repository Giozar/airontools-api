name: Build, Test, and Push Docker Image

on:
  push:
    branches:
      - main  # Configura la rama que activarÃ¡ el workflow

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="echo 'db.runCommand({ connectionStatus: 1 }).ok'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/airontools-admin-api:latest
          build-args: |
            SERVER_PORT=${{ secrets.SERVER_PORT }}
            DATABASE_HOST=mongodb://mongo:27017/${{ secrets.DATABASE_NAME }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_PORT=27017
            HOST_API=${{ secrets.HOST_API }}
            CLIENT_PORT=${{ secrets.CLIENT_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}

      - name: Test Docker Image with MongoDB
        run: |
          docker run -d --name airontools-admin-api-test \
            --env SERVER_PORT=${{ secrets.SERVER_PORT }} \
            --env DATABASE_HOST=mongodb://mongo:27017/${{ secrets.DATABASE_NAME }} \
            --env DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
            --env DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
            --env DATABASE_PORT=27017 \
            --env HOST_API=${{ secrets.HOST_API }} \
            --env CLIENT_PORT=${{ secrets.CLIENT_PORT }} \
            --env JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --env AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --env AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --env AWS_REGION=${{ secrets.AWS_REGION }} \
            --env AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
            --link ${{ jobs.build.services.mongo.id }}:mongo \
            ${{ secrets.DOCKERHUB_USERNAME }}/airontools-admin-api:latest

      - name: Clean up Docker containers
        run: docker rm -f airontools-admin-api-test

      - name: Clean up
        run: docker builder prune --force
