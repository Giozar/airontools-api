version: '3.8'

services:
  airontools-admin-api:
    depends_on:
      - db
    image: airontools-admin-api:latest  # Usaremos la imagen ya construida y subida
    container_name: airontools-admin-api
    restart: always # reiniciar el contenedor si se detiene
    ports:
      - "${PORT}:${PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_HOST: mongodb://db:${DATABASE_PORT}/${DATABASE_NAME}  # Apuntando al servicio 'db'
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      HOST_API: ${HOST_API}
      CLIENT_PORT: ${CLIENT_PORT}
      JWT_SECRET: ${JWT_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AI_API: ${AI_API}  # Agregado: URL para la API de IA
      OPENAI_API_KEY: ${OPENAI_API_KEY}  # Agregado: Clave API de OpenAI
      PORT: ${PORT}  # Agregado: El puerto de la aplicación

  db:
    image: mongo:7.0
    container_name: mongodb-airontools-admin-api
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}  # Nombre de la base de datos que se creará al iniciar MongoDB
    volumes:
      - ./mongo:/data/db  # Persistencia de datos
